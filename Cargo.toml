[package]
name = "edl-server"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
anyhow = "1.0.86"
cpal = { git = "https://github.com/RustAudio/cpal.git", rev = "582e93c41d6073df5d5da871989c5fd581ea04b8" , features = ["asio"]}
dirs = "5.0.1"
eframe = "0.27.2"
httparse = "1.8.0"
log = "0.4.21"
ltc = "0.2.0"
num-traits = "0.2.19"
rfd = "0.14.1"
serde = {version = "1.0.203", features = ["derive"]}
serde_json = "1.0.117"
vtc = "0.1.13"


[package.metadata.bundle]
name = "EDL Server"
identifier = "com.hankjackson.edlserver"
icon = ["32x32.png", "128x128.png", "128x128@2x.png"]
version = "0.0.1"
resources = ["assets", "images/**/*.png", "secrets/public_key.txt"]
copyright = "Copyright (c) Hank Jackson 2024. All rights reserved."
category = "Video"
short_description = "Generate an EDL file from live triggers over HTTP"
long_description = """
EDL Server is a video broadcast and streaming tool for generating EDL (Edit Decision List) files from custom, mappable, edit "events" synced over a live LTC/SMPTE timecode feed. EDL-Server listens for incoming events over a network using a simple HTTP REST API. When an event request is received, it will parse and log the event metadata (such as AV channels, edit type, tape number, etc.) into an EDL with the corresponding timecode. This allows users to use arbitrary switching software, so long as it can send HTTP requests to log their live camera switches and automatically import them as edits into their editing software of choice.
"""
